<?php

namespace tr\animalBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AnimalRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnimalRepository extends EntityRepository
{

    public function getMaxID()
    {
        $em = $this->getEntityManager();
        $q = $em->createQuery('select count(a.id) mid from tranimalBundle:Animal a');
        $res = $q->getSingleResult();

        return $res;
    }

    public function getAnimalCount()
    {
        $em = $this->getEntityManager();
        $q = $em->createQuery('select count(a.id) aid from tranimalBundle:Animal a where a.yBranch=-1 and a.nBranch=-1');
        $res = $q->getSingleResult();

        return $res;
    }

    public function getNextQuestion($currentID, $answer)
    {
        $em = $this->getEntityManager();
        $repo = $em->getRepository('tranimalBundle:Animal');
        $q = $repo->createQueryBuilder('q')
                ->where('q.id=:id')
                ->setParameter('id', $currentID)
                ->getQuery();
        $res = $q->getSingleResult();
        if (strtolower($answer) == 'y')
            $next = $res->getyBranch();
        else
            $next = $res->getnBranch();

        $q = $repo->createQueryBuilder('q')
                ->where('q.id=:next')
                ->setParameter('next', $next)
                ->getQuery();
        $tmp = $q->getSingleResult();

        $res = array();
        $res['id'] = $tmp->getID();
        
        return $res;
    }

    public function getQuestionByID($id)
    {
        $em = $this->getEntityManager();
        $repo = $em->getRepository('tranimalBundle:Animal');
        $q = $repo->createQueryBuilder('q')
                ->where('q.id=:id')
                ->setParameter('id', $id)
                ->getQuery();

        $tmp = $q->getSingleResult();
        $res = array();
        $res['q'] = $tmp->getQuestion();
        $res['y']=$tmp->getYBranch();
        $res['n']=$tmp->getNBranch();
        

        return $res;
    }

    public function setNewQuestions($id, $question, $animal1, $animal2)
    {
        $em = $this->getEntityManager();
        $repo = $em->getRepository('tranimalBundle:Animal');
        
        // Get the current maxid
        $maxid=$repo->getMaxID();
        $maxid=$maxid['mid'];
        
        // Set the Y branch
        
        $nodeY=new Animal();
        $nodeY->setQuestion($animal1);
        $nodeY->setYBranch(-1);
        $nodeY->setNBranch(-1);
        $nodeY->setId($maxid+1);
        $em->persist($nodeY);
       
        // Set the N branch
        $nodeN=new Animal();
        $nodeN->setQuestion($animal2);
        $nodeN->setYBranch(-1);
        $nodeN->setNBranch(-1);
        $nodeN->setId($maxid+2);
        $em->persist($nodeN);
        
        // Get the current question and split
        $currentNode=$repo->find($id); 
        
        $currentNode->setQuestion($question);
        $currentNode->setYBranch($maxid+1);
        $currentNode->setNBranch($maxid+2);
        
        $em->flush();
        
        $res=$repo->getMaxID();
      
        return $res;
    }

}
